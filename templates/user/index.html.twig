{% extends 'base.html.twig' %}

{% block title %}Hello UserController!{% endblock %}

{% block stylesheets %}
    <link href='https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.13.1/css/all.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.9.0/main.min.css" integrity="sha256-FjyLCG3re1j4KofUTQQXmaWJw13Jdb7LQvXlkFxTDJI=" crossorigin="anonymous">
    <link rel="stylesheet" href="{{asset('css/calendar.css')}}">
   {% endblock %}

{% block body %}


<div class="example-wrapper">
    <h1>Hello </h1>
        <div id='calendar'></div>
        <div><a href="{{path('user_unavailability')}}">ajouter une indisponibilité</a></div>
</div>
{% endblock %}


    {% block javascripts %}
        <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.9.0/main.min.js" integrity="sha256-8nl2O4lMNahIAmUnxZprMxJIBiPv+SzhMuYwEuinVM0=" crossorigin="anonymous"></script>
        <script src="https://unpkg.com/popper.js/dist/umd/popper.min.js"></script>
        <script src="https://unpkg.com/tooltip.js/dist/umd/tooltip.min.js"></script>
        <script>
        document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: 'dayGridMonth', // changer en timeGridWeek si le calendrier par défaut est en week
          locale: 'fr',
          timeZone:'Europe/Paris',
          navLinks: true,
          eventDisplay: 'block',
          headerToolbar: {
              start: 'prev,next today',
              center: 'title',
              end: 'dayGridMonth, timeGridWeek, timeGridDay'
          },
        eventDidMount: function(info) {
        var tooltip = new Tooltip(info.el, {
            title: info.event.extendedProps.description,
            placement: 'top',
            trigger: 'hover',
            container: 'body'
            });
         },

        events: {{ data|raw }},
        editable: false,
        eventResizableFromStart: true
          
        });
     //  calendar.on('eventChange', (e) => {
     //       let url = `./api/${e.event.id}/edit`
     //       let donnees = {
     //           "title": e.event.title,
     //           "description": e.event.extendedProps.description,
     //           "start": e.event.start,
     //           "end": e.event.end,
     //           "backgroundColor": e.event.backgroundColor,
     //           "borderColor": e.event.borderColor,
     //           "textColor": e.event.textColor,
     //           "allDay": e.event.allDay
     //       }
            
     //       let xhr = new XMLHttpRequest
     //       xhr.open("PUT", url)
     //       xhr.send(JSON.stringify(donnees))
     //   })

        calendar.render();
        });
        </script>
    {% endblock %}
 